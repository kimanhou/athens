{"ast":null,"code":"var _jsxFileName = \"/Users/kimanhnguyen/Documents/Sites/Athens/src/view/components/Navigation/NavigationLink.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LocalValueContext } from '../LocalisationContext/LocalContext';\nimport './NavigationLink.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar NavigationLink = function NavigationLink(props) {\n  _s();\n\n  var localisation = useContext(LocalValueContext);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"navigation-link\",\n    to: props.to,\n    children: props.text.getText(localisation)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(NavigationLink, \"kyXxzS0rEaAF9UGIRZi6KPsO/zA=\");\n\n_c = NavigationLink;\nexport default NavigationLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationLink\");","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/Athens/src/view/components/Navigation/NavigationLink.tsx"],"names":["React","useContext","Link","LocalValueContext","NavigationLink","props","localisation","to","text","getText"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,OAAO,uBAAP;;;AAOA,IAAMC,cAA+C,GAAG,SAAlDA,cAAkD,CAAAC,KAAK,EAAI;AAAA;;AAC7D,MAAIC,YAAY,GAAGL,UAAU,CAACE,iBAAD,CAA7B;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,mBAAf;AAAoC,IAAA,EAAE,EAAEE,KAAK,CAACE,EAA9C;AAAA,cACKF,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBH,YAAnB;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CARD;;GAAMF,c;;KAAAA,c;AAUN,eAAeA,cAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Text from '../../../model/Text';\nimport { LocalValueContext } from '../LocalisationContext/LocalContext';\nimport './NavigationLink.scss';\n\ninterface INavigationLinkProps {\n    text : Text;\n    to : string;\n}\n\nconst NavigationLink : React.FC<INavigationLinkProps> = props => {\n    var localisation = useContext(LocalValueContext);\n\n    return (\n        <Link className={`navigation-link`} to={props.to} >\n            {props.text.getText(localisation)}\n        </Link>\n    );\n}\n\nexport default NavigationLink;"]},"metadata":{},"sourceType":"module"}