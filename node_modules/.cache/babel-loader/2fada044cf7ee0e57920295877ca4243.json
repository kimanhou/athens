{"ast":null,"code":"import _slicedToArray from \"/Users/kimanhnguyen/Documents/Sites/Athens/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/kimanhnguyen/Documents/Sites/Athens/src/view/components/LocalisationContext/LocalContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport Local from './Local';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getDefaultLocal = function getDefaultLocal() {\n  var languages = [];\n\n  if (navigator.languages != null) {\n    languages = navigator.languages.slice();\n  } else {\n    languages = [navigator.language];\n  }\n\n  languages = languages.map(function (lang) {\n    return lang.slice(0, 2).toUpperCase();\n  });\n\n  while (languages.length > 0) {\n    var language = languages.shift();\n\n    if (Local.EN.getShortName() === language) {\n      return Local.EN;\n    }\n\n    if (Local.FR.getShortName() === language) {\n      return Local.FR;\n    }\n  }\n\n  return Local.EN;\n};\n\nexport var LocalValueContext = /*#__PURE__*/createContext(Local.EN);\nexport var SetLocalContext = /*#__PURE__*/createContext(_c = function _c(local) {});\n_c2 = SetLocalContext;\n\nvar LocalContext = function LocalContext(props) {\n  _s();\n\n  var _useState = useState(function () {\n    return getDefaultLocal();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      local = _useState2[0],\n      setLocal = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(SetLocalContext.Provider, {\n    value: setLocal,\n    children: /*#__PURE__*/_jsxDEV(LocalValueContext.Provider, {\n      value: local,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LocalContext, \"mxw8WVSIVUoy1w3nqKp5xg1ksuE=\");\n\n_c3 = LocalContext;\nexport default LocalContext;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SetLocalContext$createContext\");\n$RefreshReg$(_c2, \"SetLocalContext\");\n$RefreshReg$(_c3, \"LocalContext\");","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/Athens/src/view/components/LocalisationContext/LocalContext.tsx"],"names":["React","createContext","useState","Local","getDefaultLocal","languages","navigator","slice","language","map","lang","toUpperCase","length","shift","EN","getShortName","FR","LocalValueContext","SetLocalContext","local","LocalContext","props","setLocal","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,MAAIC,SAAoB,GAAG,EAA3B;;AACA,MAAIC,SAAS,CAACD,SAAV,IAAuB,IAA3B,EAAgC;AAC5BA,IAAAA,SAAS,GAAGC,SAAS,CAACD,SAAV,CAAoBE,KAApB,EAAZ;AACH,GAFD,MAGK;AACDF,IAAAA,SAAS,GAAG,CAACC,SAAS,CAACE,QAAX,CAAZ;AACH;;AACDH,EAAAA,SAAS,GAAGA,SAAS,CAACI,GAAV,CAAc,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACH,KAAL,CAAW,CAAX,EAAc,CAAd,EAAiBI,WAAjB,EAAJ;AAAA,GAAlB,CAAZ;;AACA,SAAMN,SAAS,CAACO,MAAV,GAAmB,CAAzB,EAA2B;AACvB,QAAIJ,QAAQ,GAAGH,SAAS,CAACQ,KAAV,EAAf;;AACA,QAAGV,KAAK,CAACW,EAAN,CAASC,YAAT,OAA4BP,QAA/B,EAAwC;AACpC,aAAOL,KAAK,CAACW,EAAb;AACH;;AACD,QAAGX,KAAK,CAACa,EAAN,CAASD,YAAT,OAA4BP,QAA/B,EAAwC;AACpC,aAAOL,KAAK,CAACa,EAAb;AACH;AACJ;;AACD,SAAOb,KAAK,CAACW,EAAb;AACH,CAnBD;;AAqBA,OAAO,IAAMG,iBAAiB,gBAAGhB,aAAa,CAACE,KAAK,CAACW,EAAP,CAAvC;AACP,OAAO,IAAMI,eAAe,gBAAGjB,aAAa,MAAC,YAACkB,KAAD,EAAmB,CAAE,CAAtB,CAArC;MAAMD,e;;AAEb,IAAME,YAAuB,GAAG,SAA1BA,YAA0B,CAAAC,KAAK,EAAI;AAAA;;AACrC,kBAA0BnB,QAAQ,CAAC;AAAA,WAAME,eAAe,EAArB;AAAA,GAAD,CAAlC;AAAA;AAAA,MAAOe,KAAP;AAAA,MAAcG,QAAd;;AACA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEA,QAAjC;AAAA,2BACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAEH,KAAnC;AAAA,gBACKE,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CATD;;GAAMH,Y;;MAAAA,Y;AAUN,eAAeA,YAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport Local from './Local';\n\nconst getDefaultLocal = () => {\n    let languages : string[] = [];\n    if (navigator.languages != null){\n        languages = navigator.languages.slice();\n    }\n    else {\n        languages = [navigator.language];\n    }\n    languages = languages.map(lang => lang.slice(0, 2).toUpperCase());\n    while(languages.length > 0){\n        let language = languages.shift();\n        if(Local.EN.getShortName() === language){\n            return Local.EN;\n        }\n        if(Local.FR.getShortName() === language){\n            return Local.FR;\n        }\n    }\n    return Local.EN;\n}\n\nexport const LocalValueContext = createContext(Local.EN);\nexport const SetLocalContext = createContext((local : Local) => {});\n\nconst LocalContext : React.FC = props => {\n    const [local, setLocal] = useState(() => getDefaultLocal());\n    return (\n        <SetLocalContext.Provider value={setLocal}>\n            <LocalValueContext.Provider value={local}>\n                {props.children}\n            </LocalValueContext.Provider>\n        </SetLocalContext.Provider>\n    )\n}\nexport default LocalContext;"]},"metadata":{},"sourceType":"module"}